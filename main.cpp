#include <iostream>

using namespace std;

//자료형 = 메모리 공간을 일정 크기만큼 사용한다.
//숫자를 저장하고 사용할 때 용도가 바뀜. 
//[1][0][][][][][][]
// 멀티플랫폼 작업 = 언리얼님이 해줌
//int 자료형은 cpu, OS, 컴파일러마다 크기가 다르다..
//8비트는 0~255까지 표현 가능. 7비트는 0~127까지 표현 가능. 0 ~ 126
// [] - 숫자 - 문자 순으로 package
// c언어는 변수를 비트 단위로 선언한다.
// C++ -> UE + DEFINE + UHT -> BP + C++ 이걸 다 알아야 함
// 이걸 다 할 줄 알면 Unity 안씀.
// 유니티는 에셋이 졸라 많고 없는 기능은 만들어야한다. 적 때리는 기능이 없네? 에셋가서 사야지. 없네? ㅅ1발..
// 언리얼은 기능이 초온나많다. 적 때리는 기능이 없네? 아 내가 못찾은거구나.
// 유니티는 C#으로 한다? 아니다! 유니티가 C#으로 한 다음 C++로 바꾼다.. 
// 그래서 에러가 나면 무조건 C++로 고쳐야한다..
// bit -> 8bit -> byte / eascii(Extended ascii) -> 용량이 부족하니 long long int같은 자료형을 추가
// 상수
// - 문자 상수
// - 숫자 상수
// - - 정수
// - - 실수
//
// 자료
// char
// int
// [] << 변수명
// char Number;

//int Number을 하면 Number라고 부르는 4바이트? 크기의 메모리를 메모리 어딘가에 저장하는 것.
//[][][][] -> 100
//double대신 float를 쓰는 이유 : 메모리를 두 배로 먹기 때문에 계산시간이 너무 오래걸려서. 
//float는 소숫점 6자리까지가 유효숫자인데, double은 소숫점 12자리까지가 유효숫자다.
//그렇기 때문에 뒤에 f를 붙이는 귀찮은 짓거리를 해가며 float를 쓰는 것이다.

//오늘 한 거 : int, char, float, 대입연산자, 산술연산자, 변수선언
//하지만 중요한 것은, 그것이 무엇인지 설명하는 것. 프로그래밍에서 가장 중요한 것은 스스로 생각하는 것.
//int를 정수형 자료형, char를 문자형 자료형 이라고만 설명하는 것은 그저 남들이 가르친 것을 앵무새처럼 반복하는 말이다.
//int는 메모리에 4바이트만큼의 크기를 할당해 정수형 데이터만을 담는 것.

int main() {
	//형변환 = Casting..
	float A = (float)5.50000f;
	int B = (int)A;
	cout << B;

	return 0;
}